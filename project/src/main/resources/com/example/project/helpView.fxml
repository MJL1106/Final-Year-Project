<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.text.Font?>

<AnchorPane fx:id="scenePane" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="761.0" prefWidth="1110.0" styleClass="anchor-pane" stylesheets="@myView.css" xmlns="http://javafx.com/javafx/17" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.project.HelpView">
   <children>
      <TextArea layoutX="9.0" layoutY="14.0" prefHeight="680.0" prefWidth="1080.0" text="                                                                                                       Strategies&#10;&#10;- Tit For Tat: Always starts by splitting, then copies the opponent's previous move after the first turn.&#10;&#10;- Suspicious Tit For Tat: Always starts by stealing, then copies the opponent's previous move thereafter.&#10;&#10;- Forgiving Tit For Tat: Always starts by splitting, then copies the opponent's move after the first turn, &#10;  but forgives one instance of stealing by continuing to split for a certain number of subsequent rounds.&#10;&#10;- Two Tits For Tat: Always starts by splitting, then copies the opponent's move after the first turn, &#10;  but retaliates to one instance of stealing by stealing for the next 2 rounds in a row.&#10;&#10;- Stealer: Always steals.&#10;&#10;- Splitter: Always splits.&#10;&#10;- Random: Randomly splits or steals each turn.&#10;&#10;- Grudger: Starts by splitting and continues to split until the opponent steals. After that, always steals.&#10;&#10;- Alternator: Randomly splits or steals on the first move, then alternates between the two.&#10;&#10;- Pavlov: Starts by splitting, then repeats the previous choice if it resulted in a high payoff and &#10;  switches to the opposite choice if it resulted in a low payoff.&#10;&#10;- Score Based Pavlov: Randomly splits or steals on the first move, then repeats the previous choice if it gained more or the same points&#10;  as the opponent and switches to the opposite choice if it gained less points.&#10;&#10;- Hard Majority: Always starts by stealing, then checks the opponent's history to see if they have &#10;  split or stolen more overall and chooses the majority action.">
         <font>
            <Font name="Arial" size="13.0" />
         </font></TextArea>
      <Button fx:id="button" layoutX="529.0" layoutY="710.0" mnemonicParsing="false" onAction="#closeHelp" text="OK" />
   </children>
</AnchorPane>
